{"version":3,"sources":["images/quote.svg","App.js","serviceWorker.js","index.js","images/badge.png"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","react_default","a","createElement","transform","className","d","quote_SvgQuote","props","id","x","y","viewBox","style","enableBackground","xmlSpace","__webpack_require__","p","App","src","Badge","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"+NAAA,SAAAA,IAAmR,OAA9PA,EAAAC,OAAAC,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkBS,MAAAC,KAAAR,WAInR,IAAAS,EAEAC,EAAAC,EAAKC,cAAA,KACLC,UAAA,gEACGH,EAAAC,EAAKC,cAAA,KACRE,UAAA,OACGJ,EAAAC,EAAKC,cAAA,QACRE,UAAA,MACAC,EAAA,48BAGIC,EAAQ,SAAAC,GACZ,OAASP,EAAAC,EAAKC,cAAA,MAAAjB,EAAA,CACduB,GAAA,UACAC,EAAA,MACAC,EAAA,MACAC,QAAA,oBACAC,MAAA,CACAC,iBAAA,yBAEAC,SAAA,YACGP,GAAAR,OAGYgB,EAAAC,iBCmBAC,mLAxCX,OACEjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQc,IAAKC,IAAOC,IAAI,uBACvCpB,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,sCACAJ,EAAAC,EAAAC,cAAA,WADA,mCAEAF,EAAAC,EAAAC,cAAA,WAFA,aAGAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,mBACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OAAd,sBAKNJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAQJ,EAAAC,EAAAC,cAACI,EAAD,OACvBN,EAAAC,EAAAC,cAAA,sCACEF,EAAAC,EAAAC,cAAA,WADF,yBAEEF,EAAAC,EAAAC,cAAA,WAFF,mCAGEF,EAAAC,EAAAC,cAAA,WAHF,8BAIEF,EAAAC,EAAAC,cAAA,WAJF,2BAKEF,EAAAC,EAAAC,cAAA,WALF,oCAQFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAlCPiB,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBxB,EAAAC,EAAuB","file":"static/js/main.485cb9a1.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"matrix(3.02134,-0.146532,0.146532,3.02134,-5233.83,-3470.18)\"\n}, React.createElement(\"g\", {\n  className: \"st5\"\n}, React.createElement(\"path\", {\n  className: \"st6\",\n  d: \"M1695.59,1281.54l2.19,0c5.94,0,11.27,2.27,16.01,6.8c4.74,4.53,7.11,10.18,7.11,16.95 c0,6.67-2.37,12.16-7.11,16.48c-4.74,4.32-10.6,6.48-17.58,6.48c-7.6,0-13.93-3.05-18.98-9.14c-5.05-6.09-7.58-14.76-7.58-26.01 c0-10.31,2.21-19.97,6.64-28.98c4.43-9.01,9.84-16.14,16.25-21.4c6.41-5.26,12.11-7.89,17.11-7.89c3.33,0,5.94,0.99,7.81,2.97 c1.87,1.98,2.81,4.53,2.81,7.66c0,4.58-2.03,7.97-6.09,10.15c-5.52,3.02-9.9,6.56-13.12,10.62 C1697.83,1270.29,1696.01,1275.39,1695.59,1281.54z M1764.64,1281.54l2.03,0c5.83,0,11.12,2.27,15.86,6.8 c4.74,4.53,7.11,10.18,7.11,16.95c0,6.56-2.37,12.08-7.11,16.56c-4.74,4.48-10.6,6.72-17.58,6.72c-7.71,0-14.06-3.12-19.06-9.37 c-5-6.25-7.5-14.94-7.5-26.09c0-8.02,1.3-15.57,3.91-22.65c2.6-7.08,5.96-13.25,10.08-18.51c4.11-5.26,8.54-9.42,13.28-12.5 c4.74-3.07,8.98-4.61,12.73-4.61c3.44,0,6.07,0.96,7.89,2.89c1.82,1.93,2.73,4.51,2.73,7.73c0,4.69-2.03,8.07-6.09,10.15 c-5.73,3.23-10.05,6.8-12.97,10.7C1767.04,1270.21,1765.27,1275.29,1764.64,1281.54z\"\n})));\n\nvar SvgQuote = function SvgQuote(props) {\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 364.64 294.46\",\n    style: {\n      enableBackground: \"new 0 0 364.64 294.46\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/quote.004679d5.svg\";\nexport { SvgQuote as ReactComponent };","import React, { Component } from 'react';\nimport './App.css';\nimport { ReactComponent as Quote } from './images/quote.svg';\nimport Badge from './images/badge.png';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='CardProfile'>\n\n          <div className='hl-top'></div>\n\n          <div className='PersonalInfo'>\n            <div className='Info'>\n              <img className='Badge' src={Badge} alt=\"Phatthranit Boonta\" />\n              <h1>Phatthranit Boonta</h1>\n              <ul className='ContactInfo'>\n                <li className='Home'>2/1 Moo 6 Mittraphap Rd, Klangdong,\n                <br />Pakchong, Nakhonratchasima 30320\n                <br />Thailand </li>\n                <li className='Email'>hi@therisaz.com</li>\n                <li className='Tel'>+66 8 2871 5109</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"vl\"></div>\n\n          <div className='Headline'>\n            <div className='Quote'><Quote /></div>\n            <h2>A creative UI/UX designer\n              <br />who is self-motivated,\n              <br />self-sufficient and comes to you\n              <br />with a strong background in\n              <br />multi-device design both\n              <br />website and mobile application.</h2>\n          </div>\n\n          <div className='hl-bottom'></div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/badge.d068d26e.png\";"],"sourceRoot":""}